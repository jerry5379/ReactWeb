{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\mascots\\\\assign\\\\src\\\\Colum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport './Colum.css';\nimport * as d3 from 'd3';\n\nconst Colum = data => {\n  _s();\n\n  let xdim = 750;\n  let ydim = 500;\n  let margin = {\n    top: 80,\n    bottom: 80,\n    left: 120,\n    right: 120\n  }; // let mon=[];\n\n  const vals = [23, 55, 22, 12, 23, 8, 45, 74, 88, 31, 90];\n  let ydata = vals;\n  const canvas = useRef(null);\n  let SAMPLE_JSON = []; // let rendering=[oldvalue]\n  // const val= [oldvalue.split(\",\")]\n  //   let mon =[]\n\n  useEffect(() => {\n    // newm(data);\n    // console.log(data.map)\n    const month = [];\n    data.data.map((val, index) => {\n      month.push(val.month);\n    }); // xdata= mon\n\n    const svg = d3.select(canvas.current);\n    addAxes({\n      svg,\n      month\n    });\n    addBars({\n      svg,\n      month\n    });\n    addText({\n      svg,\n      month\n    });\n  }, [xdim, ydim, margin, ydata]);\n\n  const newm = data => {// let xdata=month\n    // console.log(data.month)\n    // SAMPLE_JSON = data\n    // data.data.map((val,index)=>{\n    //     mon.push(val.month)\n    //     // [val].map((ind,ite)=>{\n    //     //     console.log(ind.month)\n    //     // })\n    // })\n    // console.log(mon)\n    // mon.push([SAMPLE_JSON].map(item=>(\n    //   item.month\n    // )))\n    // console.log(mon[0])\n    // console.log(SAMPLE_JSON)\n    // mon.push([SAMPLE_JSON].map(item=>(\n    //   console.log(item.month)\n    // )))\n    // console.log(mon[0])\n  };\n\n  const addAxes = (svg, month) => {\n    const xAxis = d3.axisBottom(xscale);\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0, ${ydim})`).selectAll(\"text\").attr(\"text-anchor\", \"start\").attr(\"transform\", \"rotate(45)\");\n    const yAxis = d3.axisLeft(yscale);\n    svg.append(\"g\").call(yAxis).attr(\"transform\", `translate(${margin.left},0)`);\n  };\n\n  const addBars = (svg, month) => {\n    const linearScale = d3.scaleLinear().domain([0, d3.max(ydata)]).range([0, ydim]);\n    const scaleYData = ydata.map(vals => {\n      return linearScale(vals);\n    }); // console.log(scaleYData)\n\n    svg.selectAll(\"rect\").data(scaleYData).enter().append(\"rect\").attr(\"width\", xscale.bandwidth()).attr(\"height\", d => {\n      return d;\n    }).attr(\"x\", (d, i) => {\n      return xscale(month[i]);\n    }).attr(\"y\", d => {\n      return ydim - d;\n    }).attr(\"fill\", \"dodgerblue\").attr(\"stroke\", \"black\");\n  };\n\n  const addText = (svg, month) => {\n    svg.append(\"text\").text(\"Scales\").attr(\"x\", (margin.left + margin.right + xdim) / 2).attr(\"y\", (margin.top - 100) / 2);\n    svg.append(\"text\").text(\"weeek data\").attr(\"text-anchor\", \"middle\").attr(\"x\", -(margin.top + margin.bottom + ydim) / 3).attr(\"y\", margin.left / 2).attr(\"transform\", `rotate(-90,${margin.left / 2}, ${margin.top / 2})`);\n  };\n\n  const xscale = d3.scaleBand() // .domain(month)\n  .range([margin.left, xdim + margin.left]).padding(0.2);\n  const yscale = d3.scaleLinear().domain([0, d3.max(ydata)]).range([ydim, 0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: `0 0 ${xdim + margin.left + margin.right} ${ydim + margin.top + margin.bottom}`,\n        preserveAspectRatio: \"xMinYmin\",\n        width: \"100%\",\n        height: \"100%\",\n        ref: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Colum, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = Colum;\nexport default Colum; // import React, { Component, useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\n// import { scaleBand, select } from 'd3';\n// // import useResizeObserver from './useResizeObserver'\n// const Columnchart =(data)=>{\n//     const svgRef=useRef();\n//     const wrapperRef= useRef();\n//     const dimes= useResizeObserver(wrapperRef);\n//     useEffect(()=>{\n//         const svg= select(svgRef.current)\n//         const {width,height} =dimes|| wrapperRef.current.getBoundingClientRect();\n//         const xScale = scaleBand().domain(data.map(d=>d.month))\n//         .range([0,width]);\n//     },data)\n//     // console.log(data)\n//     return(\n//         <>  \n//         <div ref={wrapperRef} style={{marginBottom:\"2rem\"}}>\n//         <svg ref={svgRef}> \n//             <g className=\"x-axis\"/>\n//             <g className=\"y-axis\"/>\n//         </svg>\n//         </div>\n//         </>\n//     )\n// }\n// export default Columnchart\n\nvar _c;\n\n$RefreshReg$(_c, \"Colum\");","map":{"version":3,"sources":["D:/mascots/assign/src/Colum.js"],"names":["React","useEffect","useRef","d3","Colum","data","xdim","ydim","margin","top","bottom","left","right","vals","ydata","canvas","SAMPLE_JSON","month","map","val","index","push","svg","select","current","addAxes","addBars","addText","newm","xAxis","axisBottom","xscale","append","call","attr","selectAll","yAxis","axisLeft","yscale","linearScale","scaleLinear","domain","max","range","scaleYData","enter","bandwidth","d","i","text","scaleBand","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAQA,MAAMC,KAAK,GAAGC,IAAD,IAAQ;AAAA;;AACjB,MAAIC,IAAI,GAAC,GAAT;AACA,MAAIC,IAAI,GAAC,GAAT;AACA,MAAIC,MAAM,GAAC;AAACC,IAAAA,GAAG,EAAC,EAAL;AAASC,IAAAA,MAAM,EAAC,EAAhB;AAAoBC,IAAAA,IAAI,EAAC,GAAzB;AAA8BC,IAAAA,KAAK,EAAC;AAApC,GAAX,CAHiB,CAOjB;;AAIA,QAAMC,IAAI,GAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,CAAhB,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,EAA9B,CAAX;AAEA,MAAIC,KAAK,GAACD,IAAV;AACA,QAAME,MAAM,GAAGb,MAAM,CAAC,IAAD,CAArB;AACA,MAAIc,WAAW,GAAG,EAAlB,CAfiB,CAiBjB;AACA;AAEJ;;AAGIf,EAAAA,SAAS,CAAC,MAAI;AACV;AAEA;AACA,UAAMgB,KAAK,GAAC,EAAZ;AACAZ,IAAAA,IAAI,CAACA,IAAL,CAAUa,GAAV,CAAc,CAACC,GAAD,EAAKC,KAAL,KAAa;AACvBH,MAAAA,KAAK,CAACI,IAAN,CAAWF,GAAG,CAACF,KAAf;AACH,KAFD,EALU,CAQV;;AAEA,UAAMK,GAAG,GAAGnB,EAAE,CAACoB,MAAH,CAAUR,MAAM,CAACS,OAAjB,CAAZ;AACAC,IAAAA,OAAO,CAAC;AAACH,MAAAA,GAAD;AAAKL,MAAAA;AAAL,KAAD,CAAP;AACAS,IAAAA,OAAO,CAAC;AAACJ,MAAAA,GAAD;AAAKL,MAAAA;AAAL,KAAD,CAAP;AACAU,IAAAA,OAAO,CAAC;AAACL,MAAAA,GAAD;AAAKL,MAAAA;AAAL,KAAD,CAAP;AAIH,GAjBQ,EAiBP,CAACX,IAAD,EAAMC,IAAN,EAAWC,MAAX,EAAkBM,KAAlB,CAjBO,CAAT;;AAoBA,QAAMc,IAAI,GAAGvB,IAAD,IAAQ,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GArBD;;AAuBA,QAAMoB,OAAO,GAAC,CAACH,GAAD,EAAKL,KAAL,KAAa;AAEvB,UAAMY,KAAK,GAAE1B,EAAE,CAAC2B,UAAH,CAAcC,MAAd,CAAb;AAEAT,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EACKC,IADL,CACUJ,KADV,EAEKK,IAFL,CAEU,WAFV,EAEuB,gBAAe3B,IAAK,GAF3C,EAGK4B,SAHL,CAGe,MAHf,EAIKD,IAJL,CAIU,aAJV,EAIwB,OAJxB,EAKKA,IALL,CAKU,WALV,EAKsB,YALtB;AASA,UAAME,KAAK,GAAGjC,EAAE,CAACkC,QAAH,CAAYC,MAAZ,CAAd;AAEAhB,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EACKC,IADL,CACUG,KADV,EAEKF,IAFL,CAEU,WAFV,EAEuB,aAAY1B,MAAM,CAACG,IAAK,KAF/C;AAIH,GAnBD;;AAqBA,QAAMe,OAAO,GAAE,CAACJ,GAAD,EAAKL,KAAL,KAAa;AACxB,UAAMsB,WAAW,GAAGpC,EAAE,CAACqC,WAAH,GACnBC,MADmB,CACZ,CAAC,CAAD,EAAGtC,EAAE,CAACuC,GAAH,CAAO5B,KAAP,CAAH,CADY,EAEnB6B,KAFmB,CAEb,CAAC,CAAD,EAAGpC,IAAH,CAFa,CAApB;AAIA,UAAMqC,UAAU,GAAG9B,KAAK,CAACI,GAAN,CAAUL,IAAI,IAAE;AAC/B,aAAO0B,WAAW,CAAC1B,IAAD,CAAlB;AACH,KAFkB,CAAnB,CALwB,CAQxB;;AACAS,IAAAA,GAAG,CAACa,SAAJ,CAAc,MAAd,EACC9B,IADD,CACMuC,UADN,EAECC,KAFD,GAGCb,MAHD,CAGQ,MAHR,EAICE,IAJD,CAIM,OAJN,EAIcH,MAAM,CAACe,SAAP,EAJd,EAKCZ,IALD,CAKM,QALN,EAKgBa,CAAD,IAAK;AAChB,aAAOA,CAAP;AACH,KAPD,EAQCb,IARD,CAQM,GARN,EAQU,CAACa,CAAD,EAAGC,CAAH,KAAO;AACb,aAAOjB,MAAM,CAACd,KAAK,CAAC+B,CAAD,CAAN,CAAb;AACH,KAVD,EAWCd,IAXD,CAWM,GAXN,EAWWa,CAAD,IAAK;AACX,aAAOxC,IAAI,GAAEwC,CAAb;AACH,KAbD,EAcCb,IAdD,CAcM,MAdN,EAca,YAdb,EAeCA,IAfD,CAeM,QAfN,EAee,OAff;AAgBH,GAzBD;;AA2BA,QAAMP,OAAO,GAAC,CAACL,GAAD,EAAKL,KAAL,KAAa;AACvBK,IAAAA,GAAG,CAACU,MAAJ,CAAW,MAAX,EACCiB,IADD,CACM,QADN,EAECf,IAFD,CAEM,GAFN,EAEU,CAAC1B,MAAM,CAACG,IAAP,GAAaH,MAAM,CAACI,KAApB,GAA0BN,IAA3B,IAAiC,CAF3C,EAGC4B,IAHD,CAGM,GAHN,EAGU,CAAC1B,MAAM,CAACC,GAAP,GAAY,GAAb,IAAkB,CAH5B;AAMAa,IAAAA,GAAG,CAACU,MAAJ,CAAW,MAAX,EACCiB,IADD,CACM,YADN,EAECf,IAFD,CAEM,aAFN,EAEoB,QAFpB,EAGCA,IAHD,CAGM,GAHN,EAGU,EAAE1B,MAAM,CAACC,GAAP,GAAWD,MAAM,CAACE,MAAlB,GAAyBH,IAA3B,IAAiC,CAH3C,EAIC2B,IAJD,CAIM,GAJN,EAIU1B,MAAM,CAACG,IAAP,GAAY,CAJtB,EAKCuB,IALD,CAKM,WALN,EAKmB,cAAa1B,MAAM,CAACG,IAAP,GAAY,CAAE,KAAIH,MAAM,CAACC,GAAP,GAAW,CAAE,GAL/D;AAMH,GAbD;;AAeA,QAAMsB,MAAM,GAAG5B,EAAE,CAAC+C,SAAH,GACf;AADe,GAEdP,KAFc,CAER,CAACnC,MAAM,CAACG,IAAR,EAAaL,IAAI,GAAEE,MAAM,CAACG,IAA1B,CAFQ,EAGdwC,OAHc,CAGN,GAHM,CAAf;AAKA,QAAMb,MAAM,GAAEnC,EAAE,CAACqC,WAAH,GACbC,MADa,CACN,CAAC,CAAD,EAAGtC,EAAE,CAACuC,GAAH,CAAO5B,KAAP,CAAH,CADM,EAEb6B,KAFa,CAEP,CAACpC,IAAD,EAAM,CAAN,CAFO,CAAd;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA;AAAK,QAAA,OAAO,EAAG,OAAMD,IAAI,GAAEE,MAAM,CAACG,IAAb,GAAmBH,MAAM,CAACI,KAAM,IAAGL,IAAI,GAC5DC,MAAM,CAACC,GADiD,GAC3CD,MAAM,CAACE,MAAO,EAD3B;AAC8B,QAAA,mBAAmB,EAAC,UADlD;AAC6D,QAAA,KAAK,EAAC,MADnE;AAC0E,QAAA,MAAM,EAAC,MADjF;AACwF,QAAA,GAAG,EAAEK;AAD7F;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAxJD;;GAAMX,K;;KAAAA,K;AAyJN,eAAeA,KAAf,C,CAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA","sourcesContent":["import React,{useEffect, useRef} from 'react'\r\nimport './Colum.css'\r\nimport * as d3 from 'd3'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Colum =(data)=>{\r\n    let xdim=750\r\n    let ydim=500\r\n    let margin={top:80 ,bottom:80, left:120, right:120}\r\n\r\n \r\n  \r\n    // let mon=[];\r\n\r\n\r\n   \r\n    const vals=[23,55,22,12,23,8,45,74,88,31,90]\r\n   \r\n    let ydata=vals\r\n    const canvas = useRef(null)\r\n    let SAMPLE_JSON = []\r\n\r\n    // let rendering=[oldvalue]\r\n    // const val= [oldvalue.split(\",\")]\r\n\r\n//   let mon =[]\r\n\r\n\r\n    useEffect(()=>{ \r\n        // newm(data);\r\n\r\n        // console.log(data.map)\r\n        const month=[]\r\n        data.data.map((val,index)=>{\r\n            month.push(val.month)\r\n        })\r\n        // xdata= mon\r\n\r\n        const svg = d3.select(canvas.current) \r\n        addAxes({svg,month});\r\n        addBars({svg,month});\r\n        addText({svg,month});\r\n\r\n        \r\n\r\n    },[xdim,ydim,margin,ydata])\r\n\r\n\r\n    const newm =(data)=>{\r\n      \r\n        // let xdata=month\r\n        // console.log(data.month)\r\n        // SAMPLE_JSON = data\r\n        // data.data.map((val,index)=>{\r\n        //     mon.push(val.month)\r\n        //     // [val].map((ind,ite)=>{\r\n        //     //     console.log(ind.month)\r\n        //     // })\r\n        // })\r\n        // console.log(mon)\r\n        // mon.push([SAMPLE_JSON].map(item=>(\r\n        //   item.month\r\n        // )))\r\n        // console.log(mon[0])\r\n        // console.log(SAMPLE_JSON)\r\n        // mon.push([SAMPLE_JSON].map(item=>(\r\n        //   console.log(item.month)\r\n        // )))\r\n        // console.log(mon[0])\r\n    }\r\n\r\n    const addAxes=(svg,month)=>{\r\n      \r\n        const xAxis= d3.axisBottom(xscale);\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis)\r\n            .attr(\"transform\",`translate(0, ${ydim})`)\r\n            .selectAll(\"text\")\r\n            .attr(\"text-anchor\",\"start\")\r\n            .attr(\"transform\",\"rotate(45)\")\r\n\r\n     \r\n\r\n        const yAxis = d3.axisLeft(yscale)\r\n\r\n        svg.append(\"g\")\r\n            .call(yAxis)\r\n            .attr(\"transform\",`translate(${margin.left},0)`)\r\n\r\n    }\r\n\r\n    const addBars =(svg,month)=>{\r\n        const linearScale = d3.scaleLinear()\r\n        .domain([0,d3.max(ydata)])\r\n        .range([0,ydim])\r\n\r\n        const scaleYData = ydata.map(vals=>{\r\n            return linearScale(vals)\r\n        })\r\n        // console.log(scaleYData)\r\n        svg.selectAll(\"rect\")\r\n        .data(scaleYData)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"width\",xscale.bandwidth())\r\n        .attr(\"height\",(d)=>{\r\n            return d \r\n        })\r\n        .attr(\"x\",(d,i)=>{\r\n            return xscale(month[i])\r\n        })\r\n        .attr(\"y\",(d)=>{\r\n            return ydim -d\r\n        })\r\n        .attr(\"fill\",\"dodgerblue\")\r\n        .attr(\"stroke\",\"black\")\r\n    }\r\n\r\n    const addText=(svg,month)=>{\r\n        svg.append(\"text\")\r\n        .text(\"Scales\")\r\n        .attr(\"x\",(margin.left+ margin.right+xdim)/2)\r\n        .attr(\"y\",(margin.top -100)/2)\r\n\r\n\r\n        svg.append(\"text\")\r\n        .text(\"weeek data\") \r\n        .attr(\"text-anchor\",\"middle\")\r\n        .attr(\"x\",-(margin.top+margin.bottom+ydim)/3)\r\n        .attr(\"y\",margin.left/2)\r\n        .attr(\"transform\",`rotate(-90,${margin.left/2}, ${margin.top/2})`)\r\n    }\r\n\r\n    const xscale = d3.scaleBand()\r\n    // .domain(month)\r\n    .range([margin.left,xdim +margin.left])\r\n    .padding(0.2)\r\n\r\n    const yscale= d3.scaleLinear()\r\n    .domain([0,d3.max(ydata)])\r\n    .range([ydim,0])\r\n    \r\n \r\n    return(\r\n        <>\r\n            <div className=\"canvas\">\r\n            <svg viewBox={`0 0 ${xdim +margin.left+ margin.right} ${ydim+ \r\n            margin.top + margin.bottom}`} preserveAspectRatio=\"xMinYmin\" width=\"100%\" height=\"100%\" ref={canvas}>\r\n\r\n            </svg>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\nexport default Colum\r\n\r\n\r\n\r\n\r\n// import React, { Component, useEffect, useRef } from 'react';\r\n// import * as d3 from 'd3';\r\n// import { scaleBand, select } from 'd3';\r\n// // import useResizeObserver from './useResizeObserver'\r\n\r\n\r\n\r\n\r\n// const Columnchart =(data)=>{\r\n//     const svgRef=useRef();\r\n//     const wrapperRef= useRef();\r\n\r\n//     const dimes= useResizeObserver(wrapperRef);\r\n\r\n//     useEffect(()=>{\r\n//         const svg= select(svgRef.current)\r\n//         const {width,height} =dimes|| wrapperRef.current.getBoundingClientRect();\r\n\r\n//         const xScale = scaleBand().domain(data.map(d=>d.month))\r\n//         .range([0,width]);\r\n//     },data)\r\n\r\n//     // console.log(data)\r\n//     return(\r\n//         <>  \r\n//         <div ref={wrapperRef} style={{marginBottom:\"2rem\"}}>\r\n//         <svg ref={svgRef}> \r\n//             <g className=\"x-axis\"/>\r\n//             <g className=\"y-axis\"/>\r\n//         </svg>\r\n\r\n//         </div>\r\n\r\n\r\n//         </>\r\n//     )\r\n\r\n// }\r\n\r\n// export default Columnchart"]},"metadata":{},"sourceType":"module"}