{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\mascots\\\\assign\\\\src\\\\Colum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport './Colum.css';\nimport * as d3 from 'd3';\n\nconst Colum = data => {\n  _s();\n\n  let xdim = 750;\n  let ydim = 500;\n  let margin = {\n    top: 80,\n    bottom: 80,\n    left: 120,\n    right: 120\n  };\n  const mon = [];\n  const month = [\"jan\", \"feb\", \"march\", \"april\", \"may\", \"june\", \"july\", \"Aug\", \"sept\", \"oct\", \"nov\", \"Dec\"];\n  const vals = [23, 55, 22, 12, 23, 8, 45, 74, 88, 31, 90];\n  let xdata = month;\n  let ydata = vals;\n  const canvas = useRef(null);\n  useEffect(() => {\n    newm(data);\n    const svg = d3.select(canvas.current);\n    addAxes(svg);\n    addBars(svg);\n    addText(svg);\n  }, [xdim, ydim, margin, xdata, ydata]);\n\n  const newm = data => {\n    mon.push(data.map(item => item.month));\n    console.log(mon[0]);\n  };\n\n  const addAxes = svg => {\n    const xAxis = d3.axisBottom(xscale);\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0, ${ydim})`).selectAll(\"text\").attr(\"text-anchor\", \"start\").attr(\"transform\", \"rotate(45)\");\n    const yAxis = d3.axisLeft(yscale);\n    svg.append(\"g\").call(yAxis).attr(\"transform\", `translate(${margin.left},0)`);\n  };\n\n  const addBars = svg => {\n    const linearScale = d3.scaleLinear().domain([0, d3.max(ydata)]).range([0, ydim]);\n    const scaleYData = ydata.map(vals => {\n      return linearScale(vals);\n    }); // console.log(scaleYData)\n\n    svg.selectAll(\"rect\").data(scaleYData).enter().append(\"rect\").attr(\"width\", xscale.bandwidth()).attr(\"height\", d => {\n      return d;\n    }).attr(\"x\", (d, i) => {\n      return xscale(xdata[i]);\n    }).attr(\"y\", d => {\n      return ydim - d;\n    }).attr(\"fill\", \"dodgerblue\").attr(\"stroke\", \"black\");\n  };\n\n  const addText = svg => {\n    svg.append(\"text\").text(\"Scales\").attr(\"x\", (margin.left + margin.right + xdim) / 2).attr(\"y\", (margin.top - 100) / 2);\n    svg.append(\"text\").text(\"weeek data\").attr(\"text-anchor\", \"middle\").attr(\"x\", -(margin.top + margin.bottom + ydim) / 3).attr(\"y\", margin.left / 2).attr(\"transform\", `rotate(-90,${margin.left / 2}, ${margin.top / 2})`);\n  };\n\n  const xscale = d3.scaleBand().domain(xdata).range([margin.left, xdim + margin.left]).padding(0.2);\n  const yscale = d3.scaleLinear().domain([0, d3.max(ydata)]).range([ydim, 0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: `0 0 ${xdim + margin.left + margin.right} ${ydim + margin.top + margin.bottom}`,\n        preserveAspectRatio: \"xMinYmin\",\n        width: \"100%\",\n        height: \"100%\",\n        ref: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Colum, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = Colum;\nexport default Colum; // import React, { Component, useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\n// import { scaleBand, select } from 'd3';\n// // import useResizeObserver from './useResizeObserver'\n// const Columnchart =(data)=>{\n//     const svgRef=useRef();\n//     const wrapperRef= useRef();\n//     const dimes= useResizeObserver(wrapperRef);\n//     useEffect(()=>{\n//         const svg= select(svgRef.current)\n//         const {width,height} =dimes|| wrapperRef.current.getBoundingClientRect();\n//         const xScale = scaleBand().domain(data.map(d=>d.month))\n//         .range([0,width]);\n//     },data)\n//     // console.log(data)\n//     return(\n//         <>  \n//         <div ref={wrapperRef} style={{marginBottom:\"2rem\"}}>\n//         <svg ref={svgRef}> \n//             <g className=\"x-axis\"/>\n//             <g className=\"y-axis\"/>\n//         </svg>\n//         </div>\n//         </>\n//     )\n// }\n// export default Columnchart\n\nvar _c;\n\n$RefreshReg$(_c, \"Colum\");","map":{"version":3,"sources":["D:/mascots/assign/src/Colum.js"],"names":["React","useEffect","useRef","d3","Colum","data","xdim","ydim","margin","top","bottom","left","right","mon","month","vals","xdata","ydata","canvas","newm","svg","select","current","addAxes","addBars","addText","push","map","item","console","log","xAxis","axisBottom","xscale","append","call","attr","selectAll","yAxis","axisLeft","yscale","linearScale","scaleLinear","domain","max","range","scaleYData","enter","bandwidth","d","i","text","scaleBand","padding"],"mappings":"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","sourcesContent":["import React,{useEffect, useRef} from 'react'\r\nimport './Colum.css'\r\nimport * as d3 from 'd3'\r\n\r\nconst Colum =(data)=>{\r\n    let xdim=750\r\n    let ydim=500\r\n    let margin={top:80 ,bottom:80, left:120, right:120}\r\n    const mon=[]\r\n    \r\n    \r\n\r\n\r\n\r\n    const month=[\"jan\",\"feb\",\"march\",\"april\",\"may\",\"june\",\"july\",\"Aug\",\"sept\",\"oct\",\"nov\",\"Dec\"]\r\n    const vals=[23,55,22,12,23,8,45,74,88,31,90]\r\n    let xdata=month\r\n    let ydata=vals\r\n    const canvas = useRef(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        newm(data);\r\n\r\n        const svg = d3.select(canvas.current) \r\n        addAxes(svg);\r\n        addBars(svg);\r\n        addText(svg);\r\n\r\n        \r\n\r\n    },[xdim,ydim,margin,xdata,ydata])\r\n\r\n\r\n    const newm =(data)=>{\r\n        mon.push(data.map(item=>(\r\n            item.month\r\n          )))\r\n          console.log(mon[0])\r\n    }\r\n\r\n    const addAxes=(svg)=>{\r\n      \r\n        const xAxis= d3.axisBottom(xscale);\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis)\r\n            .attr(\"transform\",`translate(0, ${ydim})`)\r\n            .selectAll(\"text\")\r\n            .attr(\"text-anchor\",\"start\")\r\n            .attr(\"transform\",\"rotate(45)\")\r\n\r\n     \r\n\r\n        const yAxis = d3.axisLeft(yscale)\r\n\r\n        svg.append(\"g\")\r\n            .call(yAxis)\r\n            .attr(\"transform\",`translate(${margin.left},0)`)\r\n\r\n    }\r\n\r\n    const addBars =(svg)=>{\r\n        const linearScale = d3.scaleLinear()\r\n        .domain([0,d3.max(ydata)])\r\n        .range([0,ydim])\r\n\r\n        const scaleYData = ydata.map(vals=>{\r\n            return linearScale(vals)\r\n        })\r\n        // console.log(scaleYData)\r\n        svg.selectAll(\"rect\")\r\n        .data(scaleYData)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"width\",xscale.bandwidth())\r\n        .attr(\"height\",(d)=>{\r\n            return d \r\n        })\r\n        .attr(\"x\",(d,i)=>{\r\n            return xscale(xdata[i])\r\n        })\r\n        .attr(\"y\",(d)=>{\r\n            return ydim -d\r\n        })\r\n        .attr(\"fill\",\"dodgerblue\")\r\n        .attr(\"stroke\",\"black\")\r\n    }\r\n\r\n    const addText=(svg)=>{\r\n        svg.append(\"text\")\r\n        .text(\"Scales\")\r\n        .attr(\"x\",(margin.left+ margin.right+xdim)/2)\r\n        .attr(\"y\",(margin.top -100)/2)\r\n\r\n\r\n        svg.append(\"text\")\r\n        .text(\"weeek data\") \r\n        .attr(\"text-anchor\",\"middle\")\r\n        .attr(\"x\",-(margin.top+margin.bottom+ydim)/3)\r\n        .attr(\"y\",margin.left/2)\r\n        .attr(\"transform\",`rotate(-90,${margin.left/2}, ${margin.top/2})`)\r\n    }\r\n\r\n    const xscale = d3.scaleBand()\r\n    .domain(xdata)\r\n    .range([margin.left,xdim +margin.left])\r\n    .padding(0.2)\r\n\r\n    const yscale= d3.scaleLinear()\r\n    .domain([0,d3.max(ydata)])\r\n    .range([ydim,0])\r\n    \r\n \r\n    return(\r\n        <>\r\n            <div className=\"canvas\">\r\n            <svg viewBox={`0 0 ${xdim +margin.left+ margin.right} ${ydim+ \r\n            margin.top + margin.bottom}`} preserveAspectRatio=\"xMinYmin\" width=\"100%\" height=\"100%\" ref={canvas}>\r\n\r\n            </svg>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\nexport default Colum\r\n\r\n\r\n\r\n\r\n// import React, { Component, useEffect, useRef } from 'react';\r\n// import * as d3 from 'd3';\r\n// import { scaleBand, select } from 'd3';\r\n// // import useResizeObserver from './useResizeObserver'\r\n\r\n\r\n\r\n\r\n// const Columnchart =(data)=>{\r\n//     const svgRef=useRef();\r\n//     const wrapperRef= useRef();\r\n\r\n//     const dimes= useResizeObserver(wrapperRef);\r\n\r\n//     useEffect(()=>{\r\n//         const svg= select(svgRef.current)\r\n//         const {width,height} =dimes|| wrapperRef.current.getBoundingClientRect();\r\n\r\n//         const xScale = scaleBand().domain(data.map(d=>d.month))\r\n//         .range([0,width]);\r\n//     },data)\r\n\r\n//     // console.log(data)\r\n//     return(\r\n//         <>  \r\n//         <div ref={wrapperRef} style={{marginBottom:\"2rem\"}}>\r\n//         <svg ref={svgRef}> \r\n//             <g className=\"x-axis\"/>\r\n//             <g className=\"y-axis\"/>\r\n//         </svg>\r\n\r\n//         </div>\r\n\r\n\r\n//         </>\r\n//     )\r\n\r\n// }\r\n\r\n// export default Columnchart"]},"metadata":{},"sourceType":"module"}